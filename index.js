require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const cors = require('cors');

const token = process.env.BOT_TOKEN;
const webAppUrl = process.env.WEB_APP_URL;

const bot = new TelegramBot(token); // –±–µ–∑ polling
const app = express();

app.use(cors());
app.use(express.json());

// === –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å Telegram ===
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (text === '/start') {
    await bot.sendMessage(chatId, '–ê–±–æ –≤—ñ–¥–∫—Ä–∏–π –º–∞–≥–∞–∑–∏–Ω –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑:', {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üõí –í—ñ–¥–∫—Ä–∏—Ç–∏ –º–µ–Ω—é', web_app: { url: webAppUrl } }]
        ]
      }
    });
  }

  if (msg?.web_app_data?.data) {
    try {
      const data = JSON.parse(msg.web_app_data.data);
      console.log('‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –∑ WebApp:', data);

      await bot.sendMessage(chatId, '‚úÖ –î–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ!');
      await bot.sendMessage(chatId, `–Ü–º º—è: ${data.name}`);
      await bot.sendMessage(chatId, `–ü—Ä—ñ–∑–≤–∏—â–µ: ${data.lastname}`);
      await bot.sendMessage(chatId, `–¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}`);
      await bot.sendMessage(chatId, `–ê–¥—Ä–µ—Å–∞: ${data.city}, ${data.street}`);
      await bot.sendMessage(chatId, `Email: ${data.email}`);
      await bot.sendMessage(chatId, `–ß–∞—Å: ${data.time}`);
      await bot.sendMessage(chatId, `–û–ø–ª–∞—Ç–∞: ${data.paymentMethod}`);
      await bot.sendMessage(chatId, `–°—É–º–∞: ${data.total} –≥—Ä–Ω`);

      const items = data.baskItems?.map(item => `üçî ${item.title} x${item.count}`).join('\n') || '–ë–µ–∑ —Ç–æ–≤–∞—Ä—ñ–≤';
      await bot.sendMessage(chatId, `–¢–æ–≤–∞—Ä–∏:\n${items}`);
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ WebApp –¥–∞–Ω–∏—Ö:', err);
      await bot.sendMessage(chatId, '‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö.');
    }
  }
});

// === –ù–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ POST /order ===
app.post('/order', async (req, res) => {
  try {
    const data = req.body;
    console.log('üì¶ –û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ä–º–∏:', data);

    // (–Ω–µ–æ–±–æ–≤ º—è–∑–∫–æ–≤–æ) –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É –≤ Telegram
    const message = `
üì• –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø
üë§ –Ü–º º—è: ${data.name} ${data.lastname}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
üèôÔ∏è –ê–¥—Ä–µ—Å–∞: ${data.city}, ${data.street}
üìß Email: ${data.email}
üïí –ß–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${data.time}
üí≥ –û–ø–ª–∞—Ç–∞: ${data.paymentMethod}
üí∞ –°—É–º–∞: ${data.total} –≥—Ä–Ω
üõí –¢–æ–≤–∞—Ä–∏:
${data.baskItems?.map(item => `‚Ä¢ ${item.title} x${item.quantity}`).join('\n') || '‚Äî'}
    `;

    await bot.sendMessage(process.env.ADMIN_CHAT_ID, message);

    res.status(200).send({ success: true });
  } catch (err) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', err);
    res.status(500).send({ error: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// === –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ===
const PORT = process.env.PORT || 3000;
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);

  // === Webhook (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω—É –∑ Render) ===
  const url = process.env.RENDER_EXTERNAL_URL;
  if (url) {
    await bot.setWebHook(`${url}/bot${token}`);
  }
});
